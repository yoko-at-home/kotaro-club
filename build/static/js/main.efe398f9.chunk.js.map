{"version":3,"sources":["assets/img/icon.png","assets/audio/meow.mp4","assets/audio/meow-baby.mp3","components/Break.js","components/Session.js","components/TimeLeft.js","pages/landing.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Break","breakLength","decrementBreakLengthByOneMinute","incrementBreakLengthByOneMinute","breakLengthInMinutes","moment","duration","minutes","class","id","onClick","Session","sessionLength","decrementSessionLengthByOneMinute","incrementSessionLengthByOneMinute","sessionLengthInMinutes","momentDurationFormatSetup","TimeLeft","handleStartStopClick","startStopButtonLabel","timeLeft","timerLabel","formattedTimeLeft","y","format","trim","Landing","audioElement","useRef","audioElementBaby","useState","currentSessionType","setCurrentSessionType","intervalId","setIntervalId","setSessionLength","setBreakLength","setTimeLeft","useEffect","isStarted","className","newSessionLength","current","play","newBreakLength","clearInterval","newIntervalId","setInterval","prevTimeLeft","load","ref","src","meow","type","meowBaby","href","target","Over40","alt","Footer","style","paddingLeft","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.efe398f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.d4accbb8.png\";","module.exports = __webpack_public_path__ + \"static/media/meow.04ae2365.mp4\";","module.exports = __webpack_public_path__ + \"static/media/meow-baby.dca35750.mp3\";","import moment from 'moment'\nimport React from 'react'\n\nconst Break = ({\n  breakLength,\n  decrementBreakLengthByOneMinute,\n  incrementBreakLengthByOneMinute,\n}) => {\n  const breakLengthInMinutes = moment.duration(breakLength, 's').minutes()\n  return (\n    <div>\n      <div class='title' id='break-label'>\n        休憩する時間\n      </div>\n      <div class='text' id='break-length'>\n        {breakLengthInMinutes}\n      </div>\n      <div class='controls'>\n        <button\n          class='btn'\n          id='break-decrement'\n          onClick={decrementBreakLengthByOneMinute}\n        >\n          -\n        </button>\n        <button\n          class='btn'\n          id='break-increment'\n          onClick={incrementBreakLengthByOneMinute}\n        >\n          +\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Break\n","import moment from 'moment'\nimport React from 'react'\n\nconst Session = ({\n  sessionLength,\n  decrementSessionLengthByOneMinute,\n  incrementSessionLengthByOneMinute,\n}) => {\n  const sessionLengthInMinutes = moment.duration(sessionLength, 's').minutes()\n  return (\n    <>\n      <div class='title' id='session-label'>\n        集中する時間\n      </div>\n        <div class='text' id='session-length'>\n          {sessionLengthInMinutes}\n        </div>\n        <div class='controls'>\n          <button\n            class='btn'\n            id='session-decrement'\n            onClick={decrementSessionLengthByOneMinute}\n          >\n            -\n          </button>\n          <button\n            class='btn'\n            id='session-increment'\n            onClick={incrementSessionLengthByOneMinute}\n          >\n            +\n          </button>\n        </div>\n    </>\n  )\n}\n\nexport default Session\n","import moment from 'moment'\nimport momentDurationFormatSetup from 'moment-duration-format'\nimport React from 'react'\n\nmomentDurationFormatSetup(moment)\n\nconst TimeLeft = ({\n  handleStartStopClick,\n  startStopButtonLabel,\n  timeLeft,\n  timerLabel,y\n}) => {\n  const formattedTimeLeft = moment\n    .duration(timeLeft, 's')\n    .format('mm:ss', { trim: false })\n  return (\n    <div>\n      <div class='text_timerlabel' id='timer-label'>\n        {timerLabel}\n      </div>\n      <div class='text' id='time-left'>\n        {formattedTimeLeft}\n      </div>\n      <button class='btn_start' id='start_stop' onClick={handleStartStopClick}>\n        {startStopButtonLabel}\n      </button>\n    </div>\n  )\n}\n\nexport default TimeLeft\n","import React, { useState, useEffect, useRef } from 'react'\nimport Break from '../components/Break'\nimport Session from '../components/Session'\nimport TimeLeft from '../components/TimeLeft'\nimport Over40 from '../assets/img/icon.png'\nimport meow from '../assets/audio/meow.mp4'\nimport meowBaby from '../assets/audio/meow-baby.mp3'\n\nfunction Landing() {\n  const audioElement = useRef(null)\n  const audioElementBaby = useRef(null)\n  const [currentSessionType, setCurrentSessionType] = useState('🐈...🏃‍♀️') // '🐈...🏃‍♀️' or '☕︎..☕️'\n  const [intervalId, setIntervalId] = useState(null)\n  const [sessionLength, setSessionLength] = useState(60 * 25)\n  const [breakLength, setBreakLength] = useState(60 * 5)\n  const [timeLeft, setTimeLeft] = useState(sessionLength)\n\n  // change timeLeft whenever sessionLength changes\n  useEffect(() => {\n    setTimeLeft(sessionLength)\n  }, [sessionLength])\n\n  const decrementBreakLengthByOneMinute = () => {\n    const newBreakLength = breakLength - 60\n\n    if (newBreakLength < 0) {\n      setBreakLength(0)\n      setCurrentSessionType('🐈...🏃‍♀️')\n    } else {\n      setBreakLength(newBreakLength)\n    }\n  }\n\n  const incrementBreakLengthByOneMinute = () => {\n    setBreakLength(breakLength + 60)\n  }\n\n  const decrementSessionLengthByOneMinute = () => {\n    const newSessionLength = sessionLength - 60\n\n    if (newSessionLength < 0) {\n      setSessionLength(0)\n      audioElement.current.play()\n      setCurrentSessionType('☕︎..☕️')\n    } else {\n      setSessionLength(newSessionLength)\n    }\n  }\n\n  const incrementSessionLengthByOneMinute = () => {\n    setSessionLength(sessionLength + 60)\n  }\n\n  const isStarted = intervalId !== null\n  const handleStartStopClick = () => {\n    if (isStarted) {\n      // if we are in started mode:\n      // we want to stop the timer\n      // clearInterval\n      clearInterval(intervalId)\n      setIntervalId(null)\n    } else {\n      // if we are in stopped mode:\n      // decrement timeLeft by one every second (1000 ms)\n      // to do this we'll use setInterval\n      const newIntervalId = setInterval(() => {\n        setTimeLeft((prevTimeLeft) => {\n          const newTimeLeft = prevTimeLeft - 1\n          if (newTimeLeft >= 0) {\n            return prevTimeLeft - 1\n          }\n          // time left is less than zero\n          audioElement.current.play()\n          // if session:\n          if (currentSessionType === '🐈...🏃‍♀️') {\n            // switch to break\n            setCurrentSessionType('☕︎..☕️')\n            // setTimeLeft to breakLength\n            setTimeLeft(breakLength)\n          }\n          // if break:\n          else if (currentSessionType === '☕︎..☕️') {\n            // switch to session\n            setCurrentSessionType('🐈...🏃‍♀️')\n            // setTimeLeft to sessionLength\n            setTimeLeft(sessionLength)\n          }\n        })\n      }, 100) // TODO: turn back into 1000\n      setIntervalId(newIntervalId)\n    }\n  }\n\n  const handleResetButtonClick = () => {\n    // reset audio\n    audioElement.current.load()\n    audioElementBaby.current.load()\n    audioElementBaby.current.play()\n    // clear the timeout interval\n    clearInterval(intervalId)\n    // set the intervalId null\n    setIntervalId(null)\n    // set the sessiontype to '作業中'\n    setCurrentSessionType('🐈...🏃‍♀️')\n    // reset the session length to 25 minutes\n    setSessionLength(60 * 25)\n    // reset the break length to 5 minutes\n    setBreakLength(60 * 5)\n    // reset the timer to 25 minutes (initial session length)\n    setTimeLeft(60 * 25)\n  }\n\n  return (\n    <div className='main'>\n      <div class='container'>\n        <div class='left'>\n          <div className='h1' id='kotaro'>\n            Meow You Ready?{' '}\n          </div>\n          <div class='controls__wrapper'>\n            <Session\n              sessionLength={sessionLength}\n              decrementSessionLengthByOneMinute={\n                decrementSessionLengthByOneMinute\n              }\n              incrementSessionLengthByOneMinute={\n                incrementSessionLengthByOneMinute\n              }\n            />\n            <Break\n              breakLength={breakLength}\n              decrementBreakLengthByOneMinute={decrementBreakLengthByOneMinute}\n              incrementBreakLengthByOneMinute={incrementBreakLengthByOneMinute}\n            />\n\n            <TimeLeft\n              handleStartStopClick={handleStartStopClick}\n              timerLabel={currentSessionType}\n              startStopButtonLabel={isStarted ? 'Stop' : 'Start'}\n              timeLeft={timeLeft}\n            />\n            <button\n              class='btn_reset'\n              id='reset'\n              onClick={handleResetButtonClick}\n            >\n              Reset\n            </button>\n          </div>\n          <audio id='beep' ref={audioElement}>\n            <source src={meow} type='audio/mp4' />\n          </audio>\n          <audio id='beep' ref={audioElementBaby}>\n            <source src={meowBaby} type='audio/mp3' />\n          </audio>\n        </div>\n        <div class='right'>\n          <div class='composition'>\n            <a href='https://over40webclub.netlify.app/' target='_blank'>\n              <img class='composition__photo' src={Over40} alt='Over 40 Web Clubのホームページにリンクしています'/>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div class='container__ad_side'>\n        <div class='ad'>\n          Lorem ipsum dolor, sit amet consectetur adipisicing elit. Expedita\n          necessitatibus fugiat eius modi repellendus ipsum doloribus earum\n          laudantium pariatur!\n        </div>\n        <div class='ad'>\n          Lorem ipsum dolor, sit amet consectetur adipisicing elit. Expedita\n          necessitatibus fugiat eius modi repellendus ipsum doloribus earum\n          laudantium pariatur!\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Landing\n","import React from 'react'\nimport '../App.css'\n\nfunction Footer() {\n  return (\n    <footer>\n      <div className='container__ad_bottom'>\n        <div className='howto'>\n          <div className='ad'>ポモドーロタイマーの使い方</div>\n          <ul style={{ paddingLeft: '1rem'}}>\n            <li>タスクを決める</li>\n            <li>25分集中 </li>\n            <li>ニャーと聞こえたら5分休憩</li>\n          </ul>\n          深呼吸したり、瞑想したり、仕事とはまったく関係のないことをして脳を休ませ、\n          ポモドーロを4回した後に長い休憩（20〜30分）を取ると効果が絶大だそうです。\n        </div>\n        <div className='ad'>琥太郎くんが鳴くよ♪</div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React, { useState, useEffect, useRef } from 'react'\nimport './App.css'\nimport Landing from './pages/landing';\nimport Footer from './components/Footer';\n\nfunction App() {\n\n  return (\n    <>\n    <Landing />\n    <Footer />\n    </>\n  )\n  }\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}